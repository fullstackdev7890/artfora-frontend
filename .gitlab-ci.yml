stages:
 - build
 - deploy

variables:
 DOMAIN: dev.artfora.artel-workshop.com
 short_branch: $short_branch
 external_port: $external_port
 CI_PROJECT_NAME: $CI_PROJECT_NAME
 CI_COMMIT_SHORT_SHA: $CI_COMMIT_SHORT_SHA

build:
 stage: build
 before_script:
   - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"

 script:
   - echo $CI_COMMIT_REF_NAME
   - cat $env > .env
   - cat .env
   - echo $short_branch
   - docker build . -t "${short_branch}-${CI_PROJECT_NAME}-${CI_COMMIT_SHORT_SHA}" --file docker/Dockerfile

 environment:
   name: $CI_COMMIT_REF_NAME

 only:
   - staging
   - development
   - production
 tags:
   - artfora

deploy:
 stage: deploy
 before_script:
   - sudo mkdir -p /home/${short_branch}/${short_branch}-${CI_PROJECT_NAME}-${CI_COMMIT_SHORT_SHA}
   - >
     docker volume create --opt type=none --opt device=/home/${short_branch}/${short_branch}-${CI_PROJECT_NAME}-${CI_COMMIT_SHORT_SHA} ${short_branch}-${CI_PROJECT_NAME}-${CI_COMMIT_SHORT_SHA} --opt o=bind
 script:
   - cat docker/docker-compose.dev.yml | envsubst > docker-compose.yml
   - cat docker-compose.yml
   - docker-compose up -d
 after_script:
   - echo "--- clean old volumes ---"
   - volume_list=$(docker volume ls | grep "${short_branch}-${CI_PROJECT_NAME}" | grep -v ${CI_COMMIT_SHORT_SHA} | awk '{print $2}') && for item in ${volume_list//\\n\ }; do docker volume rm $item; done
   - >
     dir_list=$(sudo ls /home/${short_branch}/ | grep "${short_branch}-${CI_PROJECT_NAME}" | grep -v "${CI_COMMIT_SHORT_SHA}" ) &&
     for item in ${dir_list//\\n\ };
     do sudo rm -rf "/home/${short_branch}/$item";
     done
   - echo "--- clean unused images ---"
   - docker system prune -a -f
 environment:
   name: $CI_COMMIT_REF_NAME
 only:
   - staging
   - development
   - production
 tags:
   - artfora
